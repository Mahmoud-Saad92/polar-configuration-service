name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  USER_NAME: mahmoud-saad92
  IMAGE_NAME: configuration-service
  VERSION: 0.0.1

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with: {
          java-version: '21',
          distribution: 'temurin',
          cache: 'maven'
        }
      - name: Build, unit tests and integration tests
        run: |
          chmod +x mvnw
          ./mvnw clean package -DskipTests
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v7
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: 'false'
          severity-cutoff: 'high'
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: "${{ steps.scan.outputs.sarif }}"

  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with: {
          java-version: '21',
          distribution: 'temurin',
          cache: 'maven'
        }
      - name: Build container image
        run: |
          chmod +x mvnw
          ./mvnw verify -DskipTests
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.VERSION }} .
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v7
        id: scan
        with:
          image: ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: 'false'
          severity-cutoff: 'high'
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: "${{ steps.scan.outputs.sarif }}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push container image to GitHub Container Registry
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ env.VERSION }} ${{ env.REGISTRY }}/${{env.USER_NAME}}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          docker push ${{ env.REGISTRY }}/${{env.USER_NAME}}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

